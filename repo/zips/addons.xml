<?xml version='1.0' encoding='utf-8'?>
<addons><addon id="context.wutu" name="Wutu - Global Context Menu Items" provider-name="Ezra-Hubbard" version="0.0.4">
	<requires>
		<import addon="script.module.requests" version="2.19.1" />
	</requires>
	<extension point="kodi.context.item">
		<menu id="kodi.core.main">
			<item library="contextSettings.py">
				<label>[B][COLOR lime]Wutu[/COLOR][/B] - CM Settings</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.wutu.settings)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.wutu/) +
					String.IsEqual(ListItem.Property(isWutu_widget),true)
				</visible>
			</item>
			<item library="traktManager.py">
				<label>[B][COLOR lime]Wutu[/COLOR][/B] - Trakt Manager</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.wutu.traktManager)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.wutu/) +
					String.IsEqual(ListItem.Property(isWutu_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,season) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="clearProviders.py">
				<label>[B][COLOR lime]Wutu[/COLOR][/B] - Clear Providers</label>
				<visible>
					[!String.IsEmpty(Window(home).Property(context.wutu.clearProviders)) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.wutu/?action=play) +
					String.IsEqual(ListItem.Property(isWutu_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]] |
					[String.Contains(Container.FolderPath,videodb://) +
					[String.Contains(Container.ListItem.Path,Window(home).Property(wutu.movieLib.path)) | String.Contains(Container.ListItem.Path,Window(home).Property(wutu.tvLib.path))] +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]]
				</visible>
			</item>
			<item library="clearBookmark.py">
				<label>[B][COLOR lime]Wutu[/COLOR][/B] - Clear Item Bookmark</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.wutu.clearBookmark)) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.wutu/?action=play) +
					String.IsEqual(ListItem.Property(isWutu_widget),true) +
					ListItem.IsResumable +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="rescrape.py">
				<label>[B][COLOR lime]Wutu[/COLOR][/B] - Rescrape Item</label>
				<visible>
					[!String.IsEmpty(Window(home).Property(context.wutu.rescrape)) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.wutu/?action=play) +
					String.IsEqual(ListItem.Property(isWutu_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]]
				</visible>
			</item>
			<item library="libRescrape.py">
				<label>[B][COLOR lime]Wutu[/COLOR][/B] - Rescrape Lib Item</label>
				<visible>
					String.Contains(Container.FolderPath,videodb://) +
					[String.Contains(Container.ListItem.Path,Window(home).Property(wutu.movieLib.path)) | String.Contains(Container.ListItem.Path,Window(home).Property(wutu.tvLib.path))] +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="playFromHere.py">
				<label>[B][COLOR lime]Wutu[/COLOR][/B] - Play from here</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.wutu.playFromHere)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.wutu/) +
					String.IsEqual(ListItem.Property(isWutu_widget),true) +
					String.IsEqual(ListItem.dbtype,episode)
				</visible>
			</item>
			<item library="autoPlay.py">
				<label>[B][COLOR lime]Wutu[/COLOR][/B] - Auto Play</label>
				<visible>
					String.IsEmpty(Window(home).Property(wutu.autoPlay.enabled)) +
					!String.IsEmpty(Window(home).Property(context.wutu.autoPlay)) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.wutu/?action=play) +
					String.IsEqual(ListItem.Property(isWutu_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="sourceSelect.py">
				<label>[B][COLOR lime]Wutu[/COLOR][/B] - Source Select</label>
				<visible>
					!String.IsEmpty(Window(home).Property(wutu.autoPlay.enabled)) +
					!String.IsEmpty(Window(home).Property(context.wutu.sourceSelect)) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.wutu/?action=play) +
					String.IsEqual(ListItem.Property(isWutu_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="findSimilar.py">
				<label>[B][COLOR lime]Wutu[/COLOR][/B] - Find Similar</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.wutu.findSimilar)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.wutu/) +
					String.IsEqual(ListItem.Property(isWutu_widget),true) +
					[String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="browseSeries.py">
				<label>[B][COLOR lime]Wutu[/COLOR][/B] - Browse Series</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.wutu.browseSeries)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.wutu/) +
					String.IsEqual(ListItem.Property(isWutu_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,tvshow)]
				</visible>
			</item>
			<item library="browseEpisodes.py">
				<label>[B][COLOR lime]Wutu[/COLOR][/B] - Browse Episodes</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.wutu.browseEpisodes)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.wutu/) +
					String.IsEqual(ListItem.Property(isWutu_widget),true) +
					String.IsEqual(ListItem.dbtype,episode)
				</visible>
			</item>
		</menu>
	</extension>
	<extension point="xbmc.service" library="service.py" />
	<extension point="xbmc.addon.metadata">
		<summary lang="en">Wutu - This Addon is currently in beta. Please be aware there may be bugs present</summary>
		<description lang="en">Adds Global Contextual Menu Items for Wutu menu items throughout Kodi</description>
		<platform>all</platform>
		<license>GNU GENERAL PUBLIC LICENSE. Version 3, 29 June 2007</license>
		<forum />
		<disclaimer lang="en" />
		<assets>
			<icon>icon.png</icon>
			<fanart>fanart.png</fanart>
			<screenshot />
		</assets>
		<news>
[B][COLOR lime]Update - v0.0.1[/COLOR][/B]
[COLOR lime]--[/COLOR][I][/I]
		</news>
	</extension>
</addon><addon id="plugin.video.ezra" name="Ezra" provider-name="Ezra Hubbard" version="0.2.4">
    <requires>
        <import addon="xbmc.python" version="3.0.0" />
        <import addon="script.module.requests" version="2.19.1" />
        <import addon="script.module.myaccounts" version="2.0.3" />
        <import addon="script.module.ezscrapers" version="0.0.7" />
        <import addon="repository.ezra" version="0.0.1" />
    </requires>
    <extension library="resources/lib/ezra.py" point="xbmc.python.pluginsource">
        <provides>video</provides>
    </extension>
    <extension library="resources/lib/service.py" point="xbmc.service" />
    <extension library="resources/lib/" point="xbmc.python.module" />
    <extension point="kodi.context.item">
        <menu id="kodi.core.main">
            <item library="resources/contextmenu/refresh_widgets.py">
                <label>40001</label>
                <visible>String.IsEqual(ListItem.Property(ezra_widget),true)</visible>
            </item>
            <item library="resources/contextmenu/mark_watched.py">
                <label>40003</label>
                <visible>[String.IsEqual(ListItem.dbtype,movie) | String.IsEqual(ListItem.dbtype,episode)] + String.IsEqual(ListItem.Property(ezra_widget),true) + String.IsEqual(ListItem.Property(ezra_playcount),0)</visible>
            </item>
            <item library="resources/contextmenu/mark_unwatched.py">
                <label>40004</label>
                <visible>[String.IsEqual(ListItem.dbtype,movie) | String.IsEqual(ListItem.dbtype,episode)] + String.IsEqual(ListItem.Property(ezra_widget),true) + String.IsEqual(ListItem.Property(ezra_playcount),1)</visible>
            </item>
            <item library="resources/contextmenu/clear_progress.py">
                <label>40009</label>
                <visible>[String.IsEqual(ListItem.dbtype,movie) | String.IsEqual(ListItem.dbtype,episode)] + String.IsEqual(ListItem.Property(ezra_widget),true) + String.IsEqual(ListItem.Property(ezra_in_progress),true)</visible>
            </item>
            <item library="resources/contextmenu/browse.py">
                <label>40002</label>
                <visible>String.IsEqual(ListItem.dbtype,episode) + String.IsEqual(ListItem.Property(ezra_widget),true)</visible>
            </item>
            <item library="resources/contextmenu/browse_season.py">
                <label>40011</label>
                <visible>String.IsEqual(ListItem.dbtype,episode) + String.IsEqual(ListItem.Property(ezra_widget),true)</visible>
            </item>
            <item library="resources/contextmenu/trakt_manager.py">
                <label>40005</label>
                <visible>[String.IsEqual(ListItem.dbtype,movie) | String.IsEqual(ListItem.dbtype,tvshow)] + String.IsEqual(ListItem.Property(ezra_widget),true)</visible>
            </item>
            <item library="resources/contextmenu/favorites_manager.py">
                <label>40008</label>
                <visible>[String.IsEqual(ListItem.dbtype,movie) | String.IsEqual(ListItem.dbtype,tvshow)] + String.IsEqual(ListItem.Property(ezra_widget),true)</visible>
            </item>
            <item library="resources/contextmenu/play_random.py">
                <label>40010</label>
                <visible>[String.IsEqual(ListItem.dbtype,tvshow)] + String.IsEqual(ListItem.Property(ezra_widget),true)</visible>
            </item>
            <item library="resources/contextmenu/options.py">
                <label>40007</label>
                <visible>String.IsEqual(ListItem.Property(ezra_widget),true)</visible>
            </item>
            <item library="resources/contextmenu/extras.py">
                <label>40006</label>
                <visible>String.IsEqual(ListItem.Property(ezra_widget),true)</visible>
            </item>
        </menu>
    </extension>
    <extension point="xbmc.addon.metadata">
        <reuselanguageinvoker>true</reuselanguageinvoker>
        <summary lang="en">Mainly used for Furk and Easynews.</summary>
        <description lang="en">The book of Ezra relates how God's covenant people were restored from Babylonian exile to the covenant land</description>
        <platform>all</platform>
		<disclaimer lang="en">The author of this addon do not host any of the content which is found and have no affiliation with any of the content providers. This addon simply searches websites for content. Use at your own risk!</disclaimer>
        <license>GNU GENERAL PUBLIC LICENSE. Version 3, 29 June 2007</license>
        <assets>
            <icon>icon.png</icon>
            <fanart>fanart.png</fanart>
        </assets>
        <news>INFO: For latest changes see Changelog within Tools of add-on.</news>
    </extension>
</addon><addon id="plugin.video.wutu" name="[COLOR lime]Wutu[/COLOR]" provider-name="wutu" version="0.0.8">
	<requires>
		<import addon="xbmc.python" version="3.0.0" />
		<import addon="context.wutu" version="0.0.3" />
		<import addon="script.module.myaccounts" version="2.0.6" />
		<import addon="script.module.ezscrapers" version="0.1.1" />
		<import addon="script.module.requests" version="2.19.1" />
		<import addon="script.module.beautifulsoup4" />
		<import addon="script.module.metahandler" optional="true" />
	</requires>
	<extension point="xbmc.python.pluginsource" library="wutu.py">
		<provides>video</provides>
	</extension>
	<extension point="xbmc.service" library="service.py" start="startup" />
	<extension point="xbmc.python.module" library="resources/lib/" />
	<extension point="xbmc.addon.metadata">
		<reuselanguageinvoker>true</reuselanguageinvoker>
		<summary lang="en">From the mouth of the snake..</summary>
		<description lang="en">[B][COLOR lime]Wutu[/COLOR][/B] is a highly venomous pit viper species found in South America. This addon searches the internet for freely available media (We do not host any of the contents streamed.)</description>
		<platform>all</platform>
		<license>GNU GENERAL PUBLIC LICENSE. Version 3, 29 June 2007</license>
		<disclaimer lang="en">[B][COLOR lime]Wutu[/COLOR][/B][CR] This addon does not form part of the Kodi Media Centre. Please do not seek assistance with this addon from any of the Official Kodi Support Channels.[CR] The author of this addon does not host any of the content which is found and have no affiliation with any of the content providers. This addon simply searches freely available websites for content.</disclaimer>
		<assets>
			<icon>icon.png</icon>
			<fanart>fanart.png</fanart>
		</assets>
		<news>
		</news>
	</extension>
</addon><addon id="repository.ezra" name="Ezra Repository" version="0.0.2" provider-name="Ezra-Hubbard">
    <extension point="xbmc.addon.repository" name="Ezra Repository">
        <dir>
            <info compressed="false">https://raw.githubusercontent.com/Ezra-Hubbard/Ezra-Hubbard.github.io/master/repo/zips/addons.xml</info>
            <checksum>https://raw.githubusercontent.com/Ezra-Hubbard/Ezra-Hubbard.github.io/master/repo/zips/addons.xml.md5</checksum>
            <datadir zip="true">https://raw.githubusercontent.com/Ezra-Hubbard/Ezra-Hubbard.github.io/master/repo/zips/</datadir>
        </dir>
    </extension>
    <extension point="xbmc.addon.metadata">
        <summary>Ezra</summary>
        <description>From the pen of Ezra Hubbard</description>
        <disclaimer />
        <platform>all</platform>
        <assets>
            <icon>icon.png</icon>
            <fanart>fanart.jpg</fanart>
        </assets>
    </extension>
</addon><addon id="script.module.ezscrapers" name="Ezra Scrapers Module" version="0.1.2b" provider-name="Ezra Hubbard">
	<requires>
		<import addon="xbmc.python" version="3.0.0" />
		<import addon="script.module.requests" />
		<import addon="script.module.myaccounts" version="2.0.2" />
	</requires>
	<extension point="xbmc.python.pluginsource" library="lib/default.py">
		<provides>executable</provides>
	</extension> 
	<extension point="xbmc.service" library="lib/service.py" start="startup" />
	<extension point="xbmc.python.module" library="lib" /> 
	<extension point="xbmc.addon.metadata">
		<reuselanguageinvoker>false</reuselanguageinvoker>
		<summary lang="en">Ezra Scrapers Module</summary>
		<description>Scrape common video host for URL's to be playable in Kodi, simplifying addon development of video plugins requiring multi video hosts.</description>
		<platform>all</platform>
		<license>GNU GENERAL PUBLIC LICENSE. Version 3, 29 June 2007</license>
		<forum />
		<website />
		<source />
		<disclaimer lang="en">The author is not responsible for the use of this addon. The author is not responsible for the content found using this addon. The author does not host or own any content found within this addon.[CR]The author is in no way affiliated with Kodi, Team Kodi, or the XBMC Foundation.[CR]This is a Non-profit resource, organized solely for educational purposes which is protected under the Fair-Use doctrine of the Copyright Act, Specifically section 107, which does promote freedom of expression, by permitting the unlicensed use of copyright-protected works.</disclaimer>
		<assets>
			<icon>icon.png</icon>
			<fanart>fanart.png</fanart>
			<screenshot />
		</assets>
		<news>
		</news>
	</extension>
</addon><addon id="script.module.myaccounts" version="2.0.9b" name="My Accounts" provider-name="Ezra Hubbard">
	<requires>
		<import addon="xbmc.python" version="3.0.0" />
		<import addon="script.module.requests" version="2.19.1" />
	</requires>
	<extension point="xbmc.python.script" library="lib/default.py">
		<provides>executable</provides>
	</extension>
	<extension point="xbmc.service" library="lib/service.py" start="startup" />
	<extension point="xbmc.python.module" library="lib" /> 
	<extension point="xbmc.addon.metadata">
		<reuselanguageinvoker>false</reuselanguageinvoker>
		<summary lang="en">Shared Accounts Module</summary>
		<description>Single placeholder for all your accounts.</description>
		<platform>all</platform>
		<license>GNU GENERAL PUBLIC LICENSE. Version 3, 29 June 2007</license>
		<forum />
		<website />
		<source />
		<disclaimer lang="en">The author is not responsible for the use of this addon. [CR]The author is in no way affiliated with Kodi, Team Kodi, or the XBMC Foundation.[CR]This is a Non-profit resource, organized solely for educational purposes which is protected under the Fair-Use doctrine of the Copyright Act, Specifically section 107, which does promote freedom of expression, by permitting the unlicensed use of copyright-protected works.</disclaimer>
		<assets>
			<icon>icon.png</icon>
			<fanart>fanart.png</fanart>
			<screenshot />
		</assets>
		<news>
		</news>
	</extension>
</addon></addons>